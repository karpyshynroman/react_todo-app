{"version":3,"sources":["components/Input.js","components/Item.js","components/List.js","components/ClearButton.js","components/BottomControlPanel.js","components/Main.js","App.js","index.js"],"names":["Input","state","title","handleTitleChange","event","_this","setState","target","value","addTodo","e","which","keyCode","props","addTodoItem","react_default","a","createElement","className","placeholder","onChange","this","onKeyPress","React","Component","Item","_ref","item","toggleOne","clearItem","completed","type","id","checked","htmlFor","onClick","List","items","toggleAll","selectedTab","filteredItems","Object","toConsumableArray","filter","length","Fragment","style","display","map","components_Item","key","ClearButton","clearCompleted","some","BottomControlPanel","handleFilter","href","components_ClearButton","Main","todos","prevState","_objectSpread","every","todo","targetId","concat","document","querySelector","tab","innerText","todoList","JSON","parse","localStorage","getItem","todoIdFromJson","setItem","stringify","components_Input","components_List","components_BottomControlPanel","App","components_Main","ReactDOM","render","src_App","getElementById"],"mappings":"iRAsCeA,6MAnCbC,MAAQ,CACNC,MAAO,MAGTC,kBAAoB,SAACC,GACnBC,EAAKC,SAAS,CACZJ,MAAOE,EAAMG,OAAOC,WAIxBC,QAAU,SAACC,GACgB,KAArBL,EAAKJ,MAAMC,OAA6B,KAAZQ,EAAEC,OAA8B,KAAdD,EAAEE,UAClDP,EAAKQ,MAAMC,YAAYT,EAAKJ,MAAMC,OAClCG,EAAKC,SAAS,CACZJ,MAAO,+EAMX,OACEa,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SACEC,UAAU,WACVC,YAAY,yBACZC,SAAUC,KAAKlB,kBACfmB,WAAYD,KAAKZ,QACjBD,MAAOa,KAAKpB,MAAMC,gBA7BRqB,IAAMC,WCuBXC,MAvBf,SAAAC,GAA8C,IAA9BC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,UAAWC,EAAaH,EAAbG,UAC/B,OACEd,EAAAC,EAAAC,cAAA,MAAIC,UAAWS,EAAKG,UAAY,YAAc,IAC5Cf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SACEc,KAAK,WACLb,UAAU,SACVc,GAAIL,EAAKK,GACTZ,SAAUQ,EACVK,QAASN,EAAKG,YAEhBf,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,UAAUP,EAAKzB,OAC9Ba,EAAAC,EAAAC,cAAA,UACEc,KAAK,SACLC,GAAIL,EAAKK,GACTG,QAASN,EACTX,UAAU,eC2CLkB,MA1Df,SAAAV,GAQE,IANEW,EAMFX,EANEW,MACAT,EAKFF,EALEE,UACAU,EAIFZ,EAJEY,UACAC,EAGFb,EAHEa,YACAV,EAEFH,EAFEG,UAGEW,EAAgB,GAEpB,OAAQD,GACN,IAAK,MACHC,EAAaC,OAAAC,EAAA,EAAAD,CAAOJ,GACpB,MAEF,IAAK,SACHG,EAAgBC,OAAAC,EAAA,EAAAD,CAAIJ,GACjBM,OAAO,SAAAhB,GAAI,OAAKA,EAAKG,YACxB,MAEF,IAAK,YACHU,EAAgBC,OAAAC,EAAA,EAAAD,CAAIJ,GACjBM,OAAO,SAAAhB,GAAI,OAAIA,EAAKG,YAM3B,OAAIO,EAAMO,OAEN7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACE9B,EAAAC,EAAAC,cAAA,WAASC,UAAU,OAAO4B,MAAO,CAAEC,QAAS,UAC1ChC,EAAAC,EAAAC,cAAA,SACEc,KAAK,WACLC,GAAG,aACHd,UAAU,aACVE,SAAUkB,IAEZvB,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,cAAf,wBACAnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXsB,EAAcQ,IAAI,SAAArB,GAAI,OACrBZ,EAAAC,EAAAC,cAACgC,EAAD,CACEtB,KAAMA,EACNuB,IAAKvB,EAAKK,GACVJ,UAAWA,EACXC,UAAWA,SASlB,ICvCMsB,MAjBf,SAAAzB,GAAgD,IAAzBW,EAAyBX,EAAzBW,MAAOe,EAAkB1B,EAAlB0B,eAC5B,OAAIf,EAAMgB,KAAK,SAAA1B,GAAI,OAAIA,EAAKG,YAExBf,EAAAC,EAAAC,cAAA,UACEc,KAAK,SACLI,QAASiB,EACTlC,UAAU,kBACV4B,MAAO,CAAEC,QAAS,UAJpB,mBAWG,ICaMO,MA1Bf,SAAA5B,GAAmE,IAAtCW,EAAsCX,EAAtCW,MAAOkB,EAA+B7B,EAA/B6B,aAAcH,EAAiB1B,EAAjB0B,eAChD,OAAOf,GACFtB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAAS4B,MAAO,CAACC,QAAS,UAC3ChC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACbmB,EAAMM,OAAO,SAAAhB,GAAI,OAAKA,EAAKG,YAAWc,OACvC7B,EAAAC,EAAAC,cAAA,4BAGJF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGkB,QAASoB,EAAcC,KAAK,KAAKtC,UAAU,YAA9C,QAGFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGkB,QAASoB,EAAcC,KAAK,YAA/B,WAGFzC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGkB,QAASoB,EAAcC,KAAK,eAA/B,eAIJzC,EAAAC,EAAAC,cAACwC,EAAD,CAAapB,MAAOA,EAAOe,eAAgBA,6jBCwHlCM,6MA3IbzD,MAAQ,CACN0D,MAAO,GACP3B,GAAI,EACJO,YAAa,SAsBfD,UAAY,WACVjC,EAAKC,SAAS,SAAAsD,GAAS,OAAAC,EAAA,GAClBD,EADkB,CAErBD,MAAOC,EAAUD,MAAMX,IAAI,SAACrB,GAC1B,OAAIiC,EAAUD,MAAMG,MAAM,SAAAC,GAAI,OAAIA,EAAKjC,YACrC+B,EAAA,GAAYlC,EAAZ,CAAkBG,WAAW,IAG/B+B,EAAA,GAAYlC,EAAZ,CAAkBG,WAAW,aAKnCF,UAAY,SAACxB,GACX,IAAM4D,GAAY5D,EAAMG,OAAOyB,GAE/B3B,EAAKC,SAAS,SAAAsD,GAAS,OAAAC,EAAA,GAClBD,EADkB,CAErBD,MAAOC,EAAUD,MAAMX,IAAI,SAACrB,GAC1B,OAAIqC,IAAarC,EAAKK,GACpB6B,EAAA,GAAYlC,EAAZ,CAAkBG,WAAYH,EAAKG,YAG9BH,WAKbb,YAAc,SAACiD,GACb1D,EAAKC,SAAS,SAAAsD,GAAS,MAAK,CAC1B5B,GAAI4B,EAAU5B,GAAK,EACnB2B,MAAK,CACH,CACE3B,GAAI4B,EAAU5B,GACd9B,MAAO6D,EACPjC,WAAW,IAJVmC,OAAAxB,OAAAC,EAAA,EAAAD,CAMAmB,EAAUD,cAKnBJ,aAAe,SAACnD,GACd8D,SAASC,cAAc,sBAAsBjD,UAAY,GACzD,IAAMkD,EAAMhE,EAAMG,OAGlB,OAFgB6D,EAAIC,WAGlB,IAAK,MACHD,EAAIlD,UAAY,WAChBb,EAAKC,SAAS,CACZiC,YAAa,QAEf,MAEF,IAAK,SACH6B,EAAIlD,UAAY,WAChBb,EAAKC,SAAS,CACZiC,YAAa,WAEf,MAEF,IAAK,YACH6B,EAAIlD,UAAY,WAChBb,EAAKC,SAAS,CACZiC,YAAa,kBAQrBV,UAAY,SAACzB,GACX,IAAM4D,GAAY5D,EAAMG,OAAOyB,GAE/B3B,EAAKC,SAAS,SAAAsD,GAAS,OAAAC,EAAA,GAClBD,EADkB,CAErBD,MAAOlB,OAAAC,EAAA,EAAAD,CAAImB,EAAUD,OAAOhB,OAAO,SAAAhB,GAAI,OAAIA,EAAKK,KAAOgC,WAI3DZ,eAAiB,WACf/C,EAAKC,SAAS,SAAAsD,GAAS,OAAAC,EAAA,GAClBD,EADkB,CAErBD,MAAOlB,OAAAC,EAAA,EAAAD,CAAImB,EAAUD,OAAOhB,OAAO,SAAAhB,GAAI,OAAKA,EAAKG,oGAvGnD,IAAMwC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aACjD,GAAiB,OAAbJ,EAAmB,CACrB,IAAMK,EAAiBF,aAAaC,QAAQ,UAC5CrD,KAAKf,SAAS,SAACsD,GACb,OAAAC,EAAA,GACKD,EADL,CAEED,MAAMlB,OAAAC,EAAA,EAAAD,CAAK6B,GACXtC,IAAK2C,oDAOXF,aAAaG,QAAQ,WAAYL,KAAKM,UAAUxD,KAAKpB,MAAM0D,QAC3Dc,aAAaG,QAAQ,SAAUvD,KAAKpB,MAAM+B,qCA6F1C,OACEjB,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAC6D,EAAD,CACEhE,YAAaO,KAAKP,cAGpBC,EAAAC,EAAAC,cAAC8D,EAAD,CACE1C,MAAOhB,KAAKpB,MAAM0D,MAClB/B,UAAWP,KAAKO,UAChBU,UAAWjB,KAAKiB,UAChBC,YAAalB,KAAKpB,MAAMsC,YACxBV,UAAWR,KAAKQ,YAGlBd,EAAAC,EAAAC,cAAC+D,EAAD,CACE3C,MAAOhB,KAAKpB,MAAM0D,MAClBJ,aAAclC,KAAKkC,aACnBH,eAAgB/B,KAAK+B,yBArIZ7B,IAAMC,WCIVyD,MANf,WACE,OACElE,EAAAC,EAAAC,cAACiE,EAAD,OCCJC,IAASC,OACPrE,EAAAC,EAAAC,cAACoE,EAAD,MACAnB,SAASoB,eAAe","file":"static/js/main.744893e2.chunk.js","sourcesContent":["import React from 'react';\n\nclass Input extends React.Component {\n  state = {\n    title: '',\n  };\n\n  handleTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  addTodo = (e) => {\n    if (this.state.title !== '' && (e.which === 13 || e.keyCode === 13)) {\n      this.props.addTodoItem(this.state.title);\n      this.setState({\n        title: '',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleTitleChange}\n          onKeyPress={this.addTodo}\n          value={this.state.title}\n        />\n      </header>\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react';\n\nfunction Item({ item, toggleOne, clearItem }) {\n  return (\n    <li className={item.completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={item.id}\n          onChange={toggleOne}\n          checked={item.completed}\n        />\n        <label htmlFor=\"todo-1\">{item.title}</label>\n        <button\n          type=\"button\"\n          id={item.id}\n          onClick={clearItem}\n          className=\"destroy\"\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\n\nfunction List(\n  {\n    items,\n    toggleOne,\n    toggleAll,\n    selectedTab,\n    clearItem,\n  }\n) {\n  let filteredItems = [];\n\n  switch (selectedTab) {\n    case 'All':\n      filteredItems = [...items];\n      break;\n\n    case 'Active':\n      filteredItems = [...items]\n        .filter(item => !item.completed);\n      break;\n\n    case 'Completed':\n      filteredItems = [...items]\n        .filter(item => item.completed);\n      break;\n\n    default:\n  }\n\n  if (items.length) {\n    return (\n      <>\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={toggleAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {filteredItems.map(item => (\n              <Item\n                item={item}\n                key={item.id}\n                toggleOne={toggleOne}\n                clearItem={clearItem}\n              />\n            ))}\n          </ul>\n        </section>\n      </>\n    );\n  }\n\n  return '';\n}\n\nexport default List;\n","import React from 'react';\n\nfunction ClearButton({ items, clearCompleted }) {\n  if (items.some(item => item.completed)) {\n    return (\n      <button\n        type=\"button\"\n        onClick={clearCompleted}\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n      >\n        Clear completed\n      </button>\n    );\n  }\n\n  return '';\n}\n\nexport default ClearButton;\n","import React from 'react';\nimport ClearButton from './ClearButton';\n\nfunction BottomControlPanel({items, handleFilter, clearCompleted}) {\n  return items\n    && <footer className=\"footer\" style={{display: 'block'}}>\n        <span className=\"todo-count\">\n          {items.filter(item => !item.completed).length}\n          <span> items left</span>\n        </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a onClick={handleFilter} href=\"#/\" className=\"selected\">All</a>\n        </li>\n\n        <li>\n          <a onClick={handleFilter} href=\"#/active\">Active</a>\n        </li>\n\n        <li>\n          <a onClick={handleFilter} href=\"#/completed\">Completed</a>\n        </li>\n      </ul>\n\n      <ClearButton items={items} clearCompleted={clearCompleted} />\n    </ footer>\n}\n\nexport default BottomControlPanel;\n","import React from 'react';\nimport Input from './Input';\nimport List from './List';\nimport BottomControlPanel from './BottomControlPanel';\n\nclass Main extends React.Component {\n  state = {\n    todos: [],\n    id: 1,\n    selectedTab: 'All',\n  };\n\n  componentDidMount() {\n    const todoList = JSON.parse(localStorage.getItem('todoList'));\n    if (todoList !== null) {\n      const todoIdFromJson = localStorage.getItem('todoId');\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          todos: [...todoList],\n          id: +todoIdFromJson,\n        };\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todoList', JSON.stringify(this.state.todos));\n    localStorage.setItem('todoId', this.state.id);\n  }\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todos: prevState.todos.map((item) => {\n        if (prevState.todos.every(todo => todo.completed)) {\n          return { ...item, completed: false };\n        }\n\n        return { ...item, completed: true };\n      }),\n    }));\n  };\n\n  toggleOne = (event) => {\n    const targetId = +event.target.id;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todos: prevState.todos.map((item) => {\n        if (targetId === item.id) {\n          return { ...item, completed: !item.completed };\n        }\n\n        return item;\n      }),\n    }));\n  };\n\n  addTodoItem = (todo) => {\n    this.setState(prevState => ({\n      id: prevState.id + 1,\n      todos: [\n        {\n          id: prevState.id,\n          title: todo,\n          completed: false,\n        },\n        ...prevState.todos,\n      ],\n    }));\n  };\n\n  handleFilter = (event) => {\n    document.querySelector('.filters .selected').className = '';\n    const tab = event.target;\n    const tabName = tab.innerText;\n\n    switch (tabName) {\n      case 'All':\n        tab.className = 'selected';\n        this.setState({\n          selectedTab: 'All',\n        });\n        break;\n\n      case 'Active':\n        tab.className = 'selected';\n        this.setState({\n          selectedTab: 'Active',\n        });\n        break;\n\n      case 'Completed':\n        tab.className = 'selected';\n        this.setState({\n          selectedTab: 'Completed',\n        });\n        break;\n\n      default:\n    }\n  };\n\n  clearItem = (event) => {\n    const targetId = +event.target.id;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todos: [...prevState.todos].filter(item => item.id !== targetId),\n    }));\n  };\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todos: [...prevState.todos].filter(item => !item.completed),\n    }));\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Input\n          addTodoItem={this.addTodoItem}\n        />\n\n        <List\n          items={this.state.todos}\n          toggleOne={this.toggleOne}\n          toggleAll={this.toggleAll}\n          selectedTab={this.state.selectedTab}\n          clearItem={this.clearItem}\n        />\n\n        <BottomControlPanel\n          items={this.state.todos}\n          handleFilter={this.handleFilter}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}